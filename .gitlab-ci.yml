stages:
  - initialization
  - test.smoke
  - test.integration
  - publish
  - push
  - final

default:
  before_script:
    - ci_scripts/before_script.sh
  services:
    - $PIPELINE_DEPS_REGISTRY/docker:18.09-dind
  image: $RUNNER_IMAGE_X86_64
################################################
# Default variables used by all jobs unless they
# are overridden by the job
#
#  - .5-1 cpu
#  - 1.9GB of memory with no elasticity
#  - poll timeout of 15 minutes (to release capacity)
################################################
variables:
  DOCKER_HOST: tcp://localhost:2375
  KUBERNETES_CPU_REQUEST: 500m
  KUBERNETES_CPU_LIMIT: 1000m
  KUBERNETES_MEMORY_REQUEST: 1900000000
  KUBERNETES_MEMORY_LIMIT: 1900000000
  KUBERNETES_POLL_TIMEOUT: 1200
################################################
# For Docker Compose Tests, provide a kubernetes
# sizing of:
#
#  - 95% of a cpu up to 4x (380%)
#  - 1.9g of memory with no elasticity
################################################
# variables:
#   KUBERNETES_CPU_REQUEST: 950m
#   KUBERNETES_CPU_LIMIT: 3800m
#   KUBERNETES_MEMORY_REQUEST: 1900000000
#   KUBERNETES_MEMORY_LIMIT: 1900000000


################################################
#   _____ _   _ _____ _______
#  |_   _| \ | |_   _|__   __|
#    | | |  \| | | |    | |
#    | | | . ` | | |    | |
#   _| |_| |\  |_| |
#  |_____|_| \_|_____|  |_|
#
################################################
# Note: Platform agnostic
# intel.i.shellcheck:
#   stage: initialization
#   script:
#     - ci_scripts/shellcheck.sh
#   except:
#     variables:
#       - $CI_COMMIT_REF_NAME =~ /^workspace.*/
#       - $CI_COMMIT_MESSAGE =~ /\[skip build\]/

intel.i.chartlinter:
  stage: initialization
  script:
    - ci_scripts/helm_chart_linter.sh
  except:
    variables:
      - $CI_COMMIT_REF_NAME =~ /^workspace.*/
      - $CI_COMMIT_MESSAGE =~ /\[skip build\]/
      - $CI_COMMIT_TAG

intel.i.shfmt:
  stage: initialization
  script:
    - ci_scripts/shfmt.sh --diff
  rules:
    - changes:
        - ci_scripts/*
      when: always

################################################
#                  SMOKE TESTS
################################################

intel.t.pingaccess:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingaccess
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingaccess:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingaccess
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingauthorize:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingauthorize
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingauthorize:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingauthorize
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingauthorizepap:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingauthorizepap
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingauthorizepap:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingauthorizepap
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingdataconsole:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdataconsole
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingdataconsole:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdataconsole
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingdatagovernance:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdatagovernance
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingdatagovernance:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdatagovernance
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingdatagovernancepap:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdatagovernancepap
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingdatagovernancepap:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdatagovernancepap
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingdatasync:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdatasync
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingdatasync:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdatasync
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingdelegator:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdelegator
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingdelegator:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdelegator
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingdirectory:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdirectory
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingdirectory:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdirectory
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingdirectoryproxy:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdirectoryproxy
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingdirectoryproxy:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingdirectoryproxy
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingfederate:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingfederate
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingfederate:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingfederate
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

intel.t.pingtoolkit:
  stage: test.smoke
  script:
    - ci_scripts/run_helm_smoke.sh --product pingtoolkit
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

arm.t.pingtoolkit:
  stage: test.smoke
  image: $RUNNER_IMAGE_AARCH64
  tags:
    - platform=aarch64
  script:
    - ci_scripts/run_helm_smoke.sh --product pingtoolkit
  retry: 2
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

################################################
# The purpose of the integration test below is
# to verify replication between two
# instances of PingDirectory
intel.pd-repl.liberica:
  stage: test.integration
  script:
    - ci_scripts/run_helm_integration.sh --integration-test pd-replicated --helm-chart charts/ping-devops/
  retry: 1
  variables:
    KUBERNETES_CPU_REQUEST: 1900m
    KUBERNETES_CPU_LIMIT: 1900m
    KUBERNETES_MEMORY_REQUEST: 3920000000
    KUBERNETES_MEMORY_LIMIT: 3920000000
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

################################################
# The purpose of the integration test below is
# to verify PingAccess, PingFederate and PingDirectory
# integrate together into an end to end test
intel.pa-pf-pd.liberica:
  stage: test.integration
  script:
    - ci_scripts/run_helm_integration.sh --integration-test pa-pf-pd --helm-chart charts/ping-devops/
  retry: 1
  variables:
    KUBERNETES_CPU_REQUEST: 2850m
    KUBERNETES_CPU_LIMIT: 2850m
    KUBERNETES_MEMORY_REQUEST: 3920000000
    KUBERNETES_MEMORY_LIMIT: 3920000000
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

################################################
# The purpose of the integration test below is
# to verify PingDataSync and PingDirectory
# integrate together into an end to end test
intel.pds-pd.liberica:
  stage: test.integration
  script:
    - ci_scripts/run_helm_integration.sh --integration-test pds-pd --helm-chart charts/ping-devops/
  retry: 1
  variables:
    KUBERNETES_CPU_REQUEST: 1900m
    KUBERNETES_CPU_LIMIT: 1900m
    KUBERNETES_MEMORY_REQUEST: 3920000000
    KUBERNETES_MEMORY_LIMIT: 3920000000
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

################################################
# The purpose of the integration test below is
# to verify PingDirectoryProxy and PingDirectory
# integrate together into an end to end test
intel.pdp-pd.liberica:
  stage: test.integration
  script:
    - ci_scripts/run_helm_integration.sh --integration-test pdp-pd --helm-chart charts/ping-devops/
  retry: 1
  variables:
    KUBERNETES_CPU_REQUEST: 1900m
    KUBERNETES_CPU_LIMIT: 1900m
    KUBERNETES_MEMORY_REQUEST: 3920000000
    KUBERNETES_MEMORY_LIMIT: 5880000000
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

################################################
# The purpose of the integration test below is
# to verify PingAuthorize and PingDirectory
# integrate together into an end to end test
intel.paz-pd.liberica:
  stage: test.integration
  script:
    - ci_scripts/run_helm_integration.sh --integration-test paz-pd --helm-chart charts/ping-devops/
  retry: 1
  variables:
    KUBERNETES_CPU_REQUEST: 1900m
    KUBERNETES_CPU_LIMIT: 1900m
    KUBERNETES_MEMORY_REQUEST: 3920000000
    KUBERNETES_MEMORY_LIMIT: 3920000000
  except:
    variables:
      - $CI_COMMIT_TAG
      - $SKIP_TESTS == "true"

################################################
#   _____       _     _ _     _
#  |  __ \     | |   | (_)   | |
#  | |__) |   _| |__ | |_ ___| |__
#  |  ___/ | | | '_ \| | / __| '_ \
#  | |   | |_| | |_) | | \__ \ | | |
#  |_|    \__,_|_.__/|_|_|___/_| |_|
#
################################################

p.charts:
  stage: publish
  before_script:
    - git config --global user.name "${GITLAB_USER}"
    - git config --global user.email "${GITLAB_USER}@pingidentity.com"
  script:
    - ci_scripts/release_charts.sh
  rules:
    - if: $RELEASE == "true"

p.github:
  stage: push
  before_script:
    - git config --global user.name "${GITLAB_USER}"
    - git config --global user.email "${GITLAB_USER}@pingidentity.com"
  script:
    - git --version
    - ci_scripts/push_to_github.sh
  only:
    - master

################################################
#   ______ _____ _   _          _
#  |  ____|_   _| \ | |   /\   | |
#  | |__    | | |  \| |  /  \  | |
#  |  __|   | | | . ` | / /\ \ | |
#  | |     _| |_| |\  |/ ____ \| |____
#  |_|    |_____|_| \_/_/    \_\______|
################################################

clean-k8s:
  stage: final
  script:
    - ci_scripts/cleanup_kubernetes.sh
  when: always
